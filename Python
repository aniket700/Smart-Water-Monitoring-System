import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report
import joblib

file_path = "smart_water_data.csv"  # Ensure the correct path

df = pd.read_csv('/content/smart_water_data.csv')

X = df[['pH', 'Turbidity', 'TDS', 'Temperature']]
y = df['Water_Quality']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)


y_pred = model.predict(X_test)

accuracy = accuracy_score(y_test, y_pred)
print(f"Model Accuracy: {accuracy:.2f}")
print(classification_report(y_test, y_pred))

joblib.dump(model, "smart_water_model.pkl")

def predict_water_quality(pH, turbidity, tds, temperature):
    model = joblib.load("smart_water_model.pkl")
    input_data = np.array([[pH, turbidity, tds, temperature]])
    prediction = model.predict(input_data)
    return "Safe" if prediction[0] == 1 else "Unsafe"

example_result = predict_water_quality(7.5, 2.5, 300, 25)
print(f"Predicted Water Quality: {example_result}")
